<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE suite SYSTEM "https://testng.org/testng-1.0.dtd">
<suite name="Suite">
	<test name="Base Test">
    <classes>
      <class name="com.GeneralMathModule.BaseClass" />
    </classes>
  </test>
	
    <test name="Numbers">
  	<parameter name="browser" value="Chrome" />
  	<parameter name="author" value="Arnaz" />
    <classes>
      <class name="com.GeneralMathModule.NumbersComponent">
      	<methods>
      	<include name="testFactor"></include>
      	<include name="testGCF"></include>
      	<include name="testLCM"></include>
      	<include name="testPronouncing"></include>
      	</methods>
      </class>
    </classes>
  </test> 
  <test name="Decimals">
  	<parameter name="browser" value="Safari" />
  	<parameter name="author" value="Arnaz" />
    <classes>
      <class name="com.GeneralMathModule.DecimalsComponent">
      	<methods>
      	<include name="testFractionToDecimal"></include>
      	<include name="testDecimalToFraction"></include>
      	</methods>
      </class>
    </classes>
  </test> 
    <test name="Fractions">
  	<parameter name="browser" value="Chrome" />
  	<parameter name="author" value="Arnaz" />
    <classes>
      <class name="com.GeneralMathModule.FractionComponent">
      	<methods>
      	<include name="testReduce"></include>
      	<include name="testAddTwoFraction"></include>
      	<include name="testAddMixedAndFractionNumber"></include>
      	<include name="testAddTwoMixedNumber"></include>
      	<include name="testSubtractTwoFraction"></include>
      	<include name="testMultiplyTwoFraction"></include>
      	<include name="testDivideTwoFraction"></include>
      	<include name="testConvertImproperFractToMixedNum"></include>
      	<include name="testMixedToImproperFractionNum"></include>
      	</methods>
      </class>
    </classes>
  </test> 
  <test name="Scientific Notation">
  	<parameter name="browser" value="Safari" />
  	<parameter name="author" value="Arnaz" />
    <classes>
      <class name="com.GeneralMathModule.ScientificNotationComponent">
      	<methods>
      	<include name="testMultiplyTwoNumWithTwoScientificNotation"></include>
      	<include name="testMultiplyTwoNumWithSingleScientificNotation"></include>
      	<include name="testDivideTwoNumBothInScientificNotation"></include>
      	<include name="testDivideTwoNumOneOfThemIsScientificNotation"></include>
      	<include name="testDivideTwoNumOneOfThemIsScientificNotation2"></include>
      	<include name="testConvertNumFromScientificToRegularNotation"></include>
      	<include name="ConvertNumFromRegularToScientificNotation"></include>
      	</methods>
      </class>
    </classes>
  </test> 
  
</suite> <!-- Suite -->
